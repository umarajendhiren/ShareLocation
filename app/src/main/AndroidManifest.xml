<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.androidapps.sharelocation">

    <application
        android:name=".StarterApplication"
        android:allowBackup="false"
        android:hardwareAccelerated="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true">
       <!-- <activity android:name=".TestActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>-->
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <activity
            android:name=".view.DriverLiveRoute"
            android:label="@string/title_activity_driver_live_route" />
        <activity
            android:name=".view.DriverRouteMapActivity"
            android:label="@string/title_activity_driver_route_map" />
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <activity android:name=".viewmodel.AddBusStopActivity" />
        <activity
            android:name=".NearbyTaxi"
            android:label="@string/title_activity_nearby_taxi"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity android:name=".view.RiderActivity" />
        <activity android:name=".view.DriverActivity" />
        <activity android:name=".StreetView" />
        <activity

            android:name=".view.ChangeAccountDetailsActivity"
            android:parentActivityName=".view.HomaPageActivity"
            android:theme="@style/AppTheme"/>
        <activity android:name=".view.AddPlacesActivity" />
        <activity
            android:name=".view.CreateAndJoinCircleActivity"
            android:parentActivityName=".view.HomaPageActivity" />
        <activity
            android:name=".view.HomaPageActivity"
            android:hardwareAccelerated="true"
            android:launchMode="singleTask"
            android:theme="@style/AppTheme">

           <!-- <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>-->
        </activity>
        <activity
            android:name=".view.SetBusStopNotificationActivity"
            android:label="Bus Stops"
            android:theme="@style/MyAlertDialogTheme" />
        <activity
            android:name=".view.MainActivity"
            android:launchMode="singleTop"
            android:noHistory="false">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".HiltTestActivity"
            android:exported="false" />

        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />
        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="ca-app-pub-8155753852159052~1649848191" />
        <meta-data
            android:name="com.parse.push.notification_icon"
            android:resource="@drawable/ic_4444" />
        <meta-data
            android:name="com.parse.push.gcm_sender_id"
            android:value="id:93204905876" />
        <meta-data
            android:name="com.parse.SERVER_URL"
            android:value="https://parseapi.back4app.com/" />
        <meta-data
            android:name="com.parse.APPLICATION_ID"
            android:value="tvo4tsUdmH3YSI7iUgewB41l7eIDKn3wLTg8oOld" />
        <meta-data
            android:name="com.parse.CLIENT_KEY"
            android:value="6Gnexs6CgHFE6ilZMLbJCaIaOcV2efGds0Lq1bJs" />

        <receiver
            android:name=".BackgroundLocationUpdate.GeofenceBroadcastReceiver"
            android:enabled="true"
            android:exported="true" /> <!-- android:name="com.parse.ParsePushBroadcastReceiver" -->
        <receiver
            android:name=".BackgroundLocationUpdate.ActivityBroadCastReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="com.google.android.gms.permission.ACTIVITY_RECOGNITION">

            <!--
                        <intent-filter>
                            <action android:name="ACTIVITY_TRANSITIONS" />
                        </intent-filter>
            -->
        </receiver>
        <!--
  <receiver android:name=".BackgroundLocationUpdate.NetworkConnectivityChangeBroadcastReceiver" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="android.net.wifi.WIFI_STATE_CHANGED" />
            </intent-filter>
        </receiver>
        -->
        <receiver
            android:name="com.parse.ParsePushBroadcastReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="com.parse.push.intent.RECEIVE" />
                <action android:name="com.parse.push.intent.OPEN" />
                <action android:name="com.parse.push.intent.DELETE" />
            </intent-filter>
        </receiver> <!-- this is for dashboard push -->
        <!-- Add the ParsePushBroadcast Receiver to handle opening up the appropriate activity for notifications -->
        <service
            android:name=".BackgroundLocationUpdate.LocationUpdateService"
            android:enabled="true"
            android:exported="true" />
        <!--
 <receiver android:name=".AddHomMapFragment$LocationUpdateBroadcastReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="location" />

            </intent-filter>
        </receiver>
        -->
        <!--
need to add a Firebase Instance ID service to listen for token updates.
This service will automatically send the updated device token to the Parse server:
        -->
        <service
            android:name="com.parse.fcm.ParseFirebaseInstanceIdService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>
        <!--
  <service
            android:name=".InstanceId"
            android:exported="true">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>
        -->
        <!-- Listen for Firebase push notification messages and decode them in the format that the Parse Server sends: -->
        <service android:name="com.parse.fcm.ParseFirebaseMessagingService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
    </application>

    <permission
        android:name="com.androidapps.sharelocation.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="com.androidapps.sharelocation.permission.C2D_MESSAGE" />
    <uses-permission android:name="com.google.android.gms.permission.ACTIVITY_RECOGNITION" />
    <uses-permission android:name="android.permission.ACTIVITY_RECOGNITION" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <uses-permission android:name="android.permission.CALL_PHONE" />

</manifest>