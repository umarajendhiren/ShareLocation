
apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs'



android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.androidapps.sharelocation"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true


        //for UI test and unit test runner


        //this is  local unit test runner
        //all runner AndroidTestRunner.class,RobolectricTestRunner.class,JUnit4.class uses this runner to test locat unit test
       testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        //this is Instrumented Unit test runner using hilt
    // testInstrumentationRunner "com.androidapps.sharelocation.HiltTestRunner"



        buildFeatures {
            viewBinding true
        }


       

            buildFeatures {
                dataBinding true
            }

        //create a unit test that uses Robolectric
        testOptions {
            unitTests {
                includeAndroidResources = true
            }
        }

        hilt {
            enableTransformForLocalTests = true
        }

        hilt {
            enableTransformForLocalTests = true
        }
        kapt {
            correctErrorTypes = true
        }

        kotlinOptions {
            jvmTarget = "1.8"
        }
          hilt {
                   enableTransformForLocalTests = true
               }
        kapt {
            correctErrorTypes = true
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //  Hilt uses Java 8 features. To enable Java 8 in  project
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {


    def nav_version = "2.3.5"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    def billing_version = "4.0.0"

    implementation "com.android.billingclient:billing:$billing_version"
    //compile group: 'com.fasterxml.jackson.core', name: 'Jackson-annotations', version: '2.2.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.8.5'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.8.5'
    //implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'


    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
   // implementation 'com.squareup.retrofit:adapter-rxjava:2.5.0'


    implementation 'com.google.android.gms:play-services-ads:19.6.0'
   // implementation 'com.squareup.retrofit2:retrofit:2.5.0'

    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"
    implementation 'androidx.lifecycle:lifecycle-process:2.2.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.2'
    implementation 'androidx.navigation:navigation-ui:2.3.2'

   // implementation 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.0'
//for arrow over polyline
    implementation 'com.google.maps.android:android-maps-utils:2.2.5'

    //viewmodel,livedata testing
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"



    // Hilt importent
    implementation "com.google.dagger:hilt-android:2.35.1"
    kapt "com.google.dagger:hilt-android-compiler:2.35.1"
    kapt "com.google.dagger:hilt-compiler:2.35.1"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    //viewmodel support in hilt dependency
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    // When using Kotlin.



     annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0'
    annotationProcessor 'com.google.dagger:hilt-android-compiler:2.35.1'





    // When using Java.

   /* annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0-alpha01'
    annotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'*/





    // For Robolectric tests.
    testImplementation 'com.google.dagger:hilt-android-testing:2.35.1'
    // ...with Kotlin.
   // kaptTest 'com.google.dagger:hilt-android-compiler:2.28-alpha'
    // ...with Java.
    testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.35.1'


    // For instrumented tests(hilt testing).
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.35.1'
    // ...with Kotlin.
   //kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.35.1'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.35.1'
    // ...with Java.
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.35.1'




//hilt viewmodel dependency for java


    // annotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'
    // need to include an additional annotation processor that works on top of the Hilt annotation processor:
   // annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0-alpha02'


    //kotlin support
    implementation 'androidx.core:core-ktx:1.3.2'
    //implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.32'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.0'
   // kaptTest 'com.google.dagger:hilt-android-compiler:2.35.1'
   kaptTest 'com.google.dagger:hilt-compiler:2.35.1'
   // kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.35.1'
  //  implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.0'

   // implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.0'

    //implementation  'org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.20-RC'
//compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk7', version: '1.4.20-RC'
    //implementation 'com.google.android:support-v4:r7'

//for multiDex support
/*    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"*/

    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"

    //for Robolectric
   // testImplementation ":testsupport"

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.0.0'
    implementation 'com.google.android.material:material:1.0.0'
//location service
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    // ViewModel
   // implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

    //phone number validation
    implementation "com.googlecode.libphonenumber:libphonenumber:8.4.2"

    //parse server dependency
    implementation 'com.parse:parse-android:1.17.0'


    //convert json string into java  object
    implementation 'com.google.code.gson:gson:2.8.6'
// implementation   "com.github.parse-community.Parse-SDK-Android:parse:1.25.0"
//    implementation "com.github.parse-community.Parse-SDK-Android:parse:1.24.1"

    // for FCM Push support (optional)
//    implementation "com.github.parse-community.Parse-SDK-Android:fcm:1.24.1"


    // Add for push notification support -- add FCM or GCM but not both.
    implementation 'com.parse:parse-fcm-android:1.17.0' // migrate to FCM
    implementation 'com.parse.bolts:bolts-android:1.4.0'

    //picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //icon generator

    implementation 'com.google.maps.android:android-maps-utils:2.2.3'


    //live query


    implementation 'com.parse:parse-livequery-android:1.0.6'


    //firebase push
//    implementation 'com.google.firebase:firebase-core:17.5.0'
//       implementation 'com.google.firebase:firebase-messaging:20.2.4'


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    // Add the dependency for the Firebase SDK for Google Analytics
    implementation "com.google.firebase:firebase-analytics:17.5.0"
 // implementation 'com.google.firebase:firebase-core:17.3.4'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'

    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    // Declare the dependency for the Performance Monitoring library
    // When NOT using the BoM, you must specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-perf:19.1.1'



    //countrry code picker
   // implementation 'com.hbb20:ccp:2.4.5'
    //both is for hilt
  /*  implementation 'com.google.dagger:hilt-android:2.28-alpha'
    annotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'

    // need to include an additional annotation processor that works on top of the Hilt annotation processor:
    annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0-alpha01'
     annotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'

    //for viewmodel hilt injection
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
*/

    //for Unit Testing
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.1'



    // Assertions
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'androidx.test.ext:truth:1.3.0'
    testImplementation 'com.google.truth:truth:1.0'

    // AndroidJUnitRunner and JUnit Rules
    testImplementation 'androidx.test:runner:1.3.1-alpha02'
    testImplementation 'androidx.test:rules:1.3.1-alpha02'
    // Core library
    testImplementation 'androidx.test:core:1.3.1-alpha02'

    // Optional -- Robolectric environment
    testImplementation 'org.robolectric:robolectric:4.4'
    // testImplementation 'androidx.test:core:1.0.0'
    // Optional -- Mockito framework
   // testImplementation 'org.mockito:mockito-core:2.7.22'
//for unit test
    testImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'
//for mockito unit test
   // testImplementation 'org.mockito:mockito-core:2.7.22'

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.7.22'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'

    //for fragment testing
    def fragment_version = "1.2.5"
// Java language implementation
    implementation "androidx.fragment:fragment:$fragment_version"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // / for unit tests using hilt
   // testImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
   // testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'



    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:1.0'




    // For instrumentation UI tests
 //   androidTestImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
 //   androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'



    //for UI test
    //implementation "com.android.support:support-core-utils:28.0.0"


    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

// Import the BoM for the Firebase platform
   // implementation platform('com.google.firebase:firebase-bom:26.5.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    //implementation 'com.google.firebase:firebase-crashlytics'
    //implementation 'com.google.firebase:firebase-analytics'

   // implementation 'com.google.firebase:firebase-crashlytics:17.3.1'
    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    // For instrumented tests.
  //  androidTestImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
    // ...with Kotlin.
//    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.28-alpha'
    // ...with Java.
  //  androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'


   /* implementation 'com.google.dagger:hilt-android:2.28-alpha'
    kapt 'com.google.dagger:hilt-android-compiler:2.28-alpha'

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.28-alpha'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.28-alpha'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.28-alpha'*/


}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://maven.google.com"
    }
}
kapt {
    correctErrorTypes true
}
apply plugin: 'com.google.gms.google-services'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'
